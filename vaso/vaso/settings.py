"""
Django settings for vaso project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from email.policy import default
from pathlib import Path
from envparse import env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
env_file_path = os.path.join(os.path.dirname(__file__), '.env')
env.read_envfile(env_file_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env.str('SECRET_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=True)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'rest_framework',
    "main.apps.MainConfig",
    "user.apps.UserConfig",
    "catalog.apps.CatalogConfig",
    'orders.apps.OrdersConfig'

]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "vaso.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "vaso.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": BASE_DIR / "db.sqlite3",
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': env.str('DB_NAME', default=''),
        'USER': env.str('DB_USER', default=''),
        'PASSWORD': env.str('DB_PASS', default=''),
        'HOST': env.str('DB_HOST', default=''),
        'PORT': env.str('DB_PORT', default=''),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "ru-RU"

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = os.path.join("static")

MEDIA_URL = "media/"
MEDIA_ROOT = os.path.join("media")

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field


HOST = env.str('HOST', default='https://localhost')

CSRF_TRUSTED_ORIGINS = [HOST]

REDSMS_KEY = env.str('REDSMS_KEY', default = '')
REDSMS_LOGIN = env.str('REDSMS_LOGIN', default = '')


YOOCASSA_SECRET_KEY = env.str('YOOCASSA_SECRET_KEY', default='test_lxyeGwqIwUtDYDAmGUggOLv0HZBQf8p21JhFqNpG0D0')
YOOCASSA_SHOP_ID = env.int('YOOCASSA_SHOP_ID', default=454458)


DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

AMOCRM_CLIENT_ID = env.str('AMOCRM_CLIENT_ID', default='')
AMOCRM_CLIENT_SECRET = env.str('AMOCRM_CLIENT_SECRET', default='')
AMOCRM_REDIRECT_URI = env.str('AMOCRM_REDIRECT_URI', default='')
AMOCRM_SUBDOMAIN = env.str('AMOCRM_SUBDOMAIN', default='')
AMOCRM_TOKEN = env.str('AMOCRM_TOKEN', default='')
